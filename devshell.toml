
[[commands]]

package = "sops"
category = "gitops"

[[commands]]
category = "gitops"
package = "k9s"

[[commands]]
category = "gitops"
package = "commitizen"

[[commands]]
category = "gitops"
package = "kubernetes-helm"

[[commands]]
category = "gitops"
package = "kubectl"

[[commands]]

help = "Get Coffee â˜•"
name = "coffee"
command = "echo 'â˜•'"
category = "relax"

[[commands]]

help = " ðŸŒ² Get Fluxcd Rolling Logs ðŸªµ"
name = "logs"
command = "flux logs -f"

[[commands]]

help = "Deploy ðŸ”¨"
name = "deploy"

command = '''
echo "It's just git push!ðŸ”¨ Enjoying gitops?"
validate
git push origin HEAD
'''
[[commands]]

help = "Pre-flight boostrap Checks."
name ="check"
command = '''
flux check --pre
'''
[[commands]]

help = " â˜¢ Bootstrap Cluster â˜¢"
name = "bootstrap"
command = '''
flux bootstrap github \
    --components-extra=image-reflector-controller,image-automation-controller \
    --context=staging \
    --owner=${GITHUB_USER} \
    --repository=${GITHUB_REPO} \
    --branch=main \
    --personal \
    --read-write-key \
    --path=clusters/staging
'''
[[commands]]

package = "kind"
category = "ci"

[[commands]]

help = "Validate"
name = "validate"
command = '''
export REPO_ROOT=$(git rev-parse --show-toplevel)
pushd $REPO_ROOT >/dev/null
exec sh -c ./scripts/validate.sh
popd
'''

[[commands]]

package = "fluxcd"

[devshell]
motd = '''
{bold}{150} ðŸ¥ž A Modern Big Datalakehouse Stack ðŸ¥ž {reset}
$(type -p menu &>/dev/null && menu)
'''
packages = [
  "yq",
  "kubeconform",
  "kustomize",
  "jq",
]

