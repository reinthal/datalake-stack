apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: dagster-dashboard-basicauth
  namespace: dagster
spec:
  basicAuth:
    secret: dagster-dashboard-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: dagster-dashboard-auth
  namespace: dagster
type: Opaque
data:
  users: a29nOiQyeSQxMiQwV29vN05mZEZPUXR5VEJ1dWhjRldPdlhZM1djTlVZamxvQ2lvdVE2RnRzcW8zQ0FiQW4vTw==
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: dagster-frontend
  namespace: dagster
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    # OAuth2 Proxy routes
    - match: Host(`dagster.local.reinthal.cc`) && PathPrefix(`/oauth2/`)
      kind: Rule
      services:
        - name: oauth2-dagster-webui-proxy
          port: 80
    # Dagster routes - now going through OAuth2 Proxy instead of directly to Dagster
    - match: Host(`dagster.local.reinthal.cc`)
      kind: Rule
      services:
        - name: oauth2-dagster-webui-proxy  # Point to OAuth2 proxy instead of Dagster directly
          port: 80
  tls:
    secretName: local-reinthal-cc-tls
---
